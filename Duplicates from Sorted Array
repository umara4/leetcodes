Intuition
We have to get rid of the third appearance of a number.

Approach
I used a count variable where once it equaled 3, I got rid of that index position from the vector.

Complexity
Time complexity:
O(n^2)

Space complexity:
O(1)

Code
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int count = 1;
        int i = 0;

        while (i < nums.size()) {
            int x = nums[i];
            int j = i + 1;
            while (j < nums.size() && x == nums[j]) {
                count++;
                if (count >= 3) {
                    nums.erase(nums.begin() + j);
                } else {
                    j++;
                }
            }

            if (count != 1) {
                count = 1; // Reset the count for the next unique element
            }
            i++;
        }

        return nums.size();
    }
};
